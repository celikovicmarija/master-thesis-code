import overpy

api = overpy.Overpass()
if __name__ == "__main__":

    result = api.query('''
        [out:csv(::id, ::lat, ::lon, name; true; ",")][timeout:600]
        (
        area["name"="Belgrade"];
        nwr(area)["tourism"="museum"];
        nwr(area)["amenity"="bank"];
        nwr(area)["amenity"="atm"];
        nwr(area)["amenity"="fuel"];
        nwr(area)["amenity"="pharmacy"];
        nwr(area)["amenity"="emergency service"];
        nwr(area)["amenity"="place of worship"];
        nwr(area)["amenity"="post office"];
        nwr(area)["amenity"="preschool"];
        nwr(area)["amenity"="prison"];
        nwr(area)["amenity"="shop"];
        nwr(area)["amenity"="social centre"];
        nwr(area)["amenity"="sport school"];
        nwr(area)["amenity"="park"];
        nwr(area)["amenity"="hospital"];
        nwr(area)["amenity"="education"];
        nwr(area)["amenity"="driving school"];
        nwr(area)["amenity"="dormitory"];
        nwr(area)["amenity"="administration"];
        nwr(area)["amenity"="restaurant"];
        nwr(area)["amenity"="cafe"];
        nwr(area)["amenity"="pub"];
        nwr(area)["amenity"="social_facility"];
        nwr(area)["amenity"="parking"];
        nwr(area)["amenity"="parking_space"];
        nwr(area)["amenity"="school"];
        nwr(area)["amenity"="fast_food"];
        nwr(area)["natural"="tree"];
        nwr(area)["natural"="peak"];
        nwr(area)["natural"="health"];
        nwr(area)["natural"="tree_row"];
        nwr(area)["natural"="grassland"];
        nwr(area)["leisure"="pitch"];
        nwr(area)["leisure"="swimming_pool"];
        nwr(area)["leisure"="park"];
        nwr(area)["leisure"="garden"];
        nwr(area)["leisure"="playground"];
        nwr(area)["leisure"="dog_park"];
        nwr(area)["leisure"="resort"];
        nwr(area)["leisure"="recreation_ground"];
        nwr(area)["leisure"="bowling_alley"];
        nwr(area)["leisure"="fishing"];
        nwr(area)["leisure"="dog_park"];
        nwr(area)["leisure"="fitness_centre"];
        nwr(area)["leisure"="outdoor_seating"];
        nwr(area)["leisure"="fitness_station"];
        nwr(area)["service"="drive-through"];
        nwr(area)["natural"="water"];
        nwr(area)["building"="residential"];
        nwr(area)["building"="church"];
        out meta;
    ''')
    print(result)

    for node in result.nodes:
        print("Name: %s. Lon: %s. Lat: %s." % (node.tags.get("name", "n/a"), node.lon, node.lat))

    # (area["place:sr"="Srbija"]["name:sr"="Beograd"]->.boundaryarea;
    #                 nwr(area.boundaryarea)["tourism" = "museum"];
    # nwr(area.boundaryarea)["tourism" = "museum"];
    # nwr(area.boundaryarea)["amenity" = "bank"];);
    # out
    # body;
    # out
    # center;
    # out
    # count;

    # r = api.query("""
    # area["ISO3166-1"="DE"][admin_level=2];
    # (node["amenity"="biergarten"](area);
    #  way["amenity"="biergarten"](area);
    #  rel["amenity"="biergarten"](area);
    # );
    # out center;
    # """)
    # coords  = []
    # coords += [(float(node.lon), float(node.lat))
    #            for node in r.nodes]
    # coords += [(float(way.center_lon), float(way.center_lat))
    #            for way in r.ways]
    # coords += [(float(rel.center_lon), float(rel.center_lat))
    #            for rel in r.relations]
    #
    # print(coords)
    #
    # X = np.array(coords)
    # plt.plot(X[:, 0], X[:, 1], 'o')
    # plt.title('Biergarten in Germany')
    # plt.xlabel('Longitude')
    # plt.ylabel('Latitude')
    # plt.axis('equal')
    # plt.show()


    """
    /*
This has been generated by the overpass-turbo wizard.
The original search was:
“amenity=restaurant around belgrade”
*/
[out:json][timeout:25];
// adjust the search radius (in meters) here
{{radius=1000}}
// gather results
(
  // query part for: “amenity=restaurant”
  node["amenity"="restaurant"](around:{{radius}},{{geocodeCoords:belgrade}});
  way["amenity"="restaurant"](around:{{radius}},{{geocodeCoords:beograd}});
  relation["amenity"="restaurant"](around:{{radius}},{{geocodeCoords:restaurant}});
);
// print results
out body;
>;
out skel qt;
    
    
    """